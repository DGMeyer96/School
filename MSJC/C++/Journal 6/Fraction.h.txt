/*
Daniel Meyer
0405182
3-14-17
CSIS 123A-3488
Journal 6
*/

#include <iostream>

#ifndef FRACTION
#define FRACTION

#include <string>
using std::istream;
using std::ostream;

class Fraction
{
private:
	int *num;
	int *den;

	static int count;

public:
	//Constructors
	Fraction();
	Fraction(int num, int den);
	Fraction(std::string f);
	Fraction(const Fraction &f);
	~Fraction();

	void create();
	void clean();
	void setFraction(int n, int d);
	Fraction add(const Fraction &f);
	Fraction sub(const Fraction &f);
	void printFraction();
	Fraction mul(const Fraction &f);
	Fraction div(const Fraction &f);
	int getNum() const;
	int getDen() const;

	//Operator Overload
	Fraction operator + (const Fraction &f);
	Fraction operator - (const Fraction &f);
	Fraction &operator = (const Fraction &f);
	Fraction operator * (const Fraction &f);
	Fraction operator / (const Fraction &f);

	friend istream &operator >> (istream &input, Fraction &f);
	friend ostream &operator << (ostream &output, const Fraction &f);

	static void printCount();
};

#endif



