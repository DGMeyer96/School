/*
Daniel Meyer
0405182
4/11/17
CSIS 123A-3488
Assignment 12
Polymorphism
*/

#ifndef DOUBLE
#define DOUBLE

#include "Integer.h"

namespace Meyer
{
	class Double : public Number
	{
	private:
		std::string tmp;
		bool recursiveNaN(int index, int decimal);

	public:
		Double();
		Double(Double &d);
		Double(double d);
		Double(Integer &i);
		Double(std::string strD);
		void equals(double input);
		void equals(std::string strD);
		Double add(Double d);
		Double add(double d);
		Double sub(Double d);
		Double sub(double d);
		Double mul(Double d);
		Double mul(double d);
		Double div(Double d);
		Double div(double d);
		double toDouble();
		Double operator + (Double d);
		Double operator - (Double d);
		Double operator * (Double d);
		Double operator / (Double d);
		Double &operator = (Double d);
		Double &operator = (double d);
		Double &operator = (std::string strD);
		bool operator == (Double d);
		bool operator == (double d);
		bool operator != (Double d);
	};
}

#endif
