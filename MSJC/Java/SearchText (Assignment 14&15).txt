/*
Daniel Meyer
0405182
12-1-15
Assignment 14/15
Using Regular Expressions
 */
package lvl2.assignment.pkg14;

import java.io.File;
import java.io.*;
import java.util.ArrayList;
import java.util.regex.*;
import java.util.Scanner;

public class SearchText 
{
    //to find palindroms need to check if chars at 0 = 4 and 1 = 3
    
    ArrayList<String> html = new ArrayList<>();
    ArrayList<String> text = new ArrayList<>();
    ArrayList<String> words = new ArrayList<>();
    ArrayList<String> pals = new ArrayList<>();
    
    public SearchText(String file)
    {
        try
        {
            Scanner sc = new Scanner(new File(file));
            while(sc.hasNextLine())
            {
                html.add(sc.nextLine());
            }
        }
        catch(FileNotFoundException e)
        {
            System.out.println("Unable to open file");
        }
        catch(IOException ie)
        {
            System.out.println("Unable to read file");
        }
        
        convertHtml();
        SearchWord();
        SearchPal();
    }
    
    public SearchText()
    {
        this(null);
    }
    
    public void convertHtml()
    {
        for(String str : html)
        {
            Pattern p1 = Pattern.compile("\\W"); //removes html code
            Matcher m1 = p1.matcher(str);
            String s1 = m1.replaceAll(" ");
            
            Pattern p2 = Pattern.compile("\\d"); //removes numbers
            Matcher m2 = p2.matcher(s1);
            String s2 = m2.replaceAll(" ");
            
            Pattern p3 = Pattern.compile("\\b[a-zA-Z]\\b"); //removes single letters (don't need to worry about 'I' since dictionary)
            Matcher m3 = p3.matcher(s2);
            String s3 = m3.replaceAll(" ");
            
            text.add(s3);
        }
    }
    
    public void SearchWord()
    {   
        for(String str : text)
        {
            Pattern p = Pattern.compile("[\\w']+");
            Matcher m = p.matcher(str);
            while(m.find())
            {
                System.out.println(m.group());
                words.add(m.group());
            }
        }
    }
    
    public void SearchPal()
    {
        for(String str : words)
        {
            //Pattern p = Pattern.compile("\\b(\\w)?(\\w)\\w?\\2\\1\\b"); //translates to 122122 2 = copy, 1 = null; '?' allow for 4 letter palindromes by checking preceding
            Pattern p = Pattern.compile("\\b(\\w)(\\w)\\w\\2\\1\\b"); //retrieves only 5 letter palindromes (22122)
            Matcher m = p.matcher(str);
            if(m.find())
            {
                pals.add(m.group());
            }
        }
    }
}
